#define STACK_SIZE 10


typedef struct {
    int T[STACK_SIZE];
    int sommet;
} pile;



int isEmpty( pile* p) {
    return p->sommet < 0;
}

int isFull( pile* p) {
    return p->sommet == STACK_SIZE - 1;
}
int initpile( pile* p){
     return p->sommet= -1;
}

int getTop( pile* p) {
    if (!isEmpty(p)) {
        return p->T[p->sommet];
    }
    return -1; // Indicates an empty stack
}

void push(pile* p, int value) {
    if (!isFull(p)) {
        p->sommet++;
        p->T[p->sommet] = value;
    } else {
        printf("Stack is full. Cannot push element.\n");
    }
}

int pop(pile* p) {
    if (!isEmpty(p)) {
        int value = getTop(p);
        p->sommet--;
        return value;
    }
    return -1; // Indicates an empty stack
}
